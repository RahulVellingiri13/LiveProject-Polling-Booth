
//for the card component

import React from "react";
import { Card, Button } from "react-bootstrap";

function CardComp({ name, createdon, title, status, question, options, votingPeriod, category }) {
  return (
    <Card className="polllist-card mb-4">
      <Card.Body>
        <Card.Header className="d-flex justify-content-between align-items-center">
          <div>
            <h6>{name}</h6>
            <p>Created: {createdon}</p>
            <p>Title: {title}</p>
            <p>Status: {status}</p>
          </div>
          <Button variant="primary">Follow</Button>
        </Card.Header>

        <Card.Text>
          <div className="mt-3 mb-3">{question}</div>
          <Card className="mb-3">
            <Card.Body>
              <Card.Header className="d-flex justify-content-between">
                <p>Poll Ends on {votingPeriod}</p>
                <p>Category: {category}</p>
              </Card.Header>
              <Card.Text className="d-flex flex-column">
                {options.map((option, index) => (
                  <div className="form-check" key={index}>
                    <input
                      className="form-check-input"
                      type="radio"
                      id={`option${index}`}
                      name="options"
                      value={option}
                    />
                    <label className="form-check-label" htmlFor={`option${index}`}>
                      {option}
                    </label>
                  </div>
                ))}
              </Card.Text>
            </Card.Body>
          </Card>
        </Card.Text>

        <Card.Footer className="d-flex justify-content-between">
          <p>
            <i className="bi bi-heart"></i> Like
          </p>
          <p>
            <i className="bi bi-chat-quote-fill"></i> Comments
          </p>
          <p>
            <i className="bi bi-share"></i> Share
          </p>
        </Card.Footer>
      </Card.Body>
    </Card>
  );
}

export default CardComp;



//for the Homepage component


import React, { useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap-icons/font/bootstrap-icons.css";
import "./Homepage.css";
import { Card, Button, Row, Col, Form, InputGroup, ProgressBar, Container } from "react-bootstrap";
import Polllist from "./Polllist";
import AddPoll from "./AddPoll";
import Pollresults from "./Pollresults";
import Userdetails from "./Userdetails";

function Homepage() {
  // State to manage current page and list of polls
  let [page, setPage] = useState('Polllist');
  let [polls, setPolls] = useState([]);

  // Function to handle page navigation
  let handlePageClick = (component) => {
    setPage(component);
  };

  // Function to add a new poll to the poll list
  let addNewPoll = (newPoll) => {
    setPolls([...polls, newPoll]);
    setPage('Polllist'); // Navigate to Polllist after adding a poll
  };

  return (
    <div className="polling-booth">
      <header>
        <h1>POLLING BOOTH</h1>
        <input type="text" placeholder="Search" />
        <div className="user-info">
          <h4>Welcome! User <i className="bi bi-person-circle"></i></h4>
        </div>
      </header>
      <div className="container">
        <aside>
          <nav>
            <ul>
              <li onClick={() => handlePageClick('Polllist')}>
                <i className="bi bi-list"></i> Poll List
              </li>
              <li onClick={() => handlePageClick('AddPoll')}>
                <i className="bi bi-plus-circle"></i> Add Poll
              </li>
              <li onClick={() => handlePageClick('Pollresults')}>
                <i className="bi bi-check2-circle"></i> Voted Polls
              </li>
              <li onClick={() => handlePageClick('Userdetails')}>
                <i className="bi bi-person-circle"></i> User Details
              </li>
            </ul>
          </nav>
          <div className="categories">
            <h4>CATEGORIES</h4>
            <nav>
              {/* Category buttons here */}
            </nav>
            <button className="sign-out">
              Sign Out <i className="bi bi-box-arrow-right"></i>
            </button>
          </div>
        </aside>
        <main>
          <nav>
            {page === 'Polllist' && <Polllist polls={polls} />}
            {page === 'AddPoll' && <AddPoll addNewPoll={addNewPoll} />}
            {page === 'Pollresults' && <Pollresults />}
            {page === 'Userdetails' && <Userdetails />}
          </nav>
        </main>
        <aside className="trending-polls">
          <h4>TRENDING POLLS</h4>
          <hr />
          {/* Trending polls content */}
        </aside>
      </div>
    </div>
  );
}

export default Homepage;

//Adding REMOVE options in the ADDPOLLS component

import React, { useState } from "react";
import { Card, Button, Form, Row, Col, InputGroup } from "react-bootstrap";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap-icons/font/bootstrap-icons.css";

function AddPoll({ onPollSubmit }) {
  const [pollTitle, setPollTitle] = useState("");
  const [pollQuestion, setPollQuestion] = useState("");
  const [pollOptions, setPollOptions] = useState(["", ""]);
  const [votingPeriod, setVotingPeriod] = useState("");
  const [category, setCategory] = useState("");

  const handleAddOption = () => {
    if (pollOptions.length < 4) {
      setPollOptions([...pollOptions, ""]);
    }
  };

  const handleOptionChange = (index, value) => {
    const newOptions = [...pollOptions];
    newOptions[index] = value;
    setPollOptions(newOptions);
  };

  // Function to handle the removal of an option
  const handleRemoveOption = (index) => {
    const newOptions = pollOptions.filter((_, i) => i !== index);
    setPollOptions(newOptions);
  };

  const handleSubmit = () => {
    const pollData = {
      pollTitle,
      pollQuestion,
      pollOptions,
      votingPeriod,
      category,
    };

    // Save to session storage
    let existingPolls = JSON.parse(sessionStorage.getItem("pollData")) || [];
    existingPolls.push(pollData);
    sessionStorage.setItem("pollData", JSON.stringify(existingPolls));

    // Trigger update in the Polllist component
    onPollSubmit(pollData);

    // Clear the form
    setPollTitle("");
    setPollQuestion("");
    setPollOptions(["", ""]);
    setVotingPeriod("");
    setCategory("");
  };

  return (
    <>
      <Card
        style={{
          padding: "20px",
          borderRadius: "10px",
          boxShadow: "0px 0px 10px rgba(0, 0, 0, 0.1)",
        }}
      >
        <Card.Header style={{ textAlign: "center" }}>
          Create Your Polls here!
        </Card.Header>
        <Form>
          <Form.Group controlId="pollTitle" className="mb-3">
            <Form.Control
              type="text"
              placeholder="Title"
              value={pollTitle}
              onChange={(e) => setPollTitle(e.target.value)}
            />
          </Form.Group>

          <Form.Group controlId="pollQuestion" className="mb-3">
            <Form.Control
              as="textarea"
              rows={2}
              placeholder="Question"
              value={pollQuestion}
              onChange={(e) => setPollQuestion(e.target.value)}
            />
          </Form.Group>

          <Row>
            <Col md={6}>
              {pollOptions.map((option, index) => (
                <Form.Group
                  controlId={`option${index}`}
                  className="mb-3"
                  key={index}
                >
                  <InputGroup>
                    <InputGroup.Text>
                      <i className="bi bi-list"></i>
                    </InputGroup.Text>
                    <Form.Control
                      type="text"
                      placeholder={`Option ${index + 1}`}
                      value={option}
                      onChange={(e) =>
                        handleOptionChange(index, e.target.value)
                      }
                    />
                    <Button
                      variant="danger"
                      onClick={() => handleRemoveOption(index)}
                    >
                      -
                    </Button>
                  </InputGroup>
                </Form.Group>
              ))}

              {pollOptions.length < 4 && (
                <Button
                  variant="success"
                  className="mb-3"
                  onClick={handleAddOption}
                >
                  Add Option
                </Button>
              )}
            </Col>

            <Col md={6}>
              <Card className="mb-3">
                <Card.Body>
                  <Card.Title>Tips On Better Polls</Card.Title>
                  <Card.Text>
                    <ul>
                      <li>Suggest short clear options</li>
                      <li>The more options, the better</li>
                      <li>Choose the poll duration</li>
                      <li>Options can't be edited after post creation</li>
                    </ul>
                  </Card.Text>
                </Card.Body>
              </Card>
            </Col>
          </Row>

          <Row>
            <Col md={6}>
              <Form.Group controlId="votingPeriod">
                <Form.Label>Voting Period</Form.Label>
                <Form.Control
                  type="date"
                  value={votingPeriod}
                  onChange={(e) => setVotingPeriod(e.target.value)}
                />
              </Form.Group>
            </Col>
          </Row>

          <Form.Group controlId="categorySelect" className="mb-3">
            <Form.Label>Select Category:</Form.Label>
            <Form.Select
              value={category}
              onChange={(e) => setCategory(e.target.value)}
            >
              <option value="">Select Category</option>
              <option value="Education">Education</option>
              <option value="Entertainment">Entertainment</option>
              <option value="Politics">Politics</option>
              <option value="Sports">Sports</option>
              <option value="Research">Research</option>
            </Form.Select>
          </Form.Group>

          <Button variant="secondary" className="me-2">
            Cancel
          </Button>
          <Button variant="primary" onClick={handleSubmit}>
            Post
          </Button>
        </Form>
      </Card>
    </>
  );
}

export default AddPoll;

//----------------------------------

//add poll component

import React, { useState } from "react";
import { Card, Button, Form, Row, Col, InputGroup } from "react-bootstrap";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap-icons/font/bootstrap-icons.css";

function AddPoll({ onPollSubmit }) {
  const [pollTitle, setPollTitle] = useState("");
  const [pollQuestion, setPollQuestion] = useState("");
  const [pollOptions, setPollOptions] = useState(["", ""]);
  const [votingPeriod, setVotingPeriod] = useState("");
  const [category, setCategory] = useState("");

  const handleAddOption = () => {
    if (pollOptions.length < 4) {
      setPollOptions([...pollOptions, ""]);
    }
  };

  const handleOptionChange = (index, value) => {
    const newOptions = [...pollOptions];
    newOptions[index] = value;
    setPollOptions(newOptions);
  };

  const handleRemoveOption = (index) => {
    if (pollOptions.length > 2) {
      const newOptions = pollOptions.filter((_, i) => i !== index);
      setPollOptions(newOptions);
    }
  };

  const handleSubmit = () => {
    const pollData = {
      pollTitle,
      pollQuestion,
      pollOptions,
      votingPeriod,
      category,
    };

    // Trigger update in the PollList component
    onPollSubmit(pollData);

    // Clear the form
    setPollTitle("");
    setPollQuestion("");
    setPollOptions(["", ""]);
    setVotingPeriod("");
    setCategory("");
  };

  return (
    <Card
      style={{
        padding: "20px",
        borderRadius: "10px",
        boxShadow: "0px 0px 10px rgba(0, 0, 0, 0.1)",
      }}
    >
      <Card.Header style={{ textAlign: "center" }}>
        Create Your Polls here!
      </Card.Header>
      <Form>
        <Form.Group controlId="pollTitle" className="mb-3">
          <Form.Control
            type="text"
            placeholder="Title"
            value={pollTitle}
            onChange={(e) => setPollTitle(e.target.value)}
          />
        </Form.Group>

        <Form.Group controlId="pollQuestion" className="mb-3">
          <Form.Control
            as="textarea"
            rows={2}
            placeholder="Question"
            value={pollQuestion}
            onChange={(e) => setPollQuestion(e.target.value)}
          />
        </Form.Group>

        <Row>
          <Col md={6}>
            {pollOptions.map((option, index) => (
              <Form.Group
                controlId={`option${index}`}
                className="mb-3"
                key={index}
              >
                <InputGroup>
                  <InputGroup.Text>
                    <i className="bi bi-list"></i>
                  </InputGroup.Text>
                  <Form.Control
                    type="text"
                    placeholder={`Option ${index + 1}`}
                    value={option}
                    onChange={(e) =>
                      handleOptionChange(index, e.target.value)
                    }
                  />
                  {pollOptions.length > 2 && (
                    <Button
                      variant="danger"
                      onClick={() => handleRemoveOption(index)}
                    >
                      -
                    </Button>
                  )}
                </InputGroup>
              </Form.Group>
            ))}

            {pollOptions.length < 4 && (
              <Button
                variant="success"
                className="mb-3"
                onClick={handleAddOption}
              >
                Add Option
              </Button>
            )}
          </Col>

          <Col md={6}>
            <Card className="mb-3">
              <Card.Body>
                <Card.Title>Tips On Better Polls</Card.Title>
                <Card.Text>
                  <ul>
                    <li>Suggest short clear options</li>
                    <li>The more options, the better</li>
                    <li>Choose the poll duration</li>
                    <li>Options can't be edited after post creation</li>
                  </ul>
                </Card.Text>
              </Card.Body>
            </Card>
          </Col>
        </Row>

        <Row>
          <Col md={6}>
            <Form.Group controlId="votingPeriod">
              <Form.Label>Voting Period</Form.Label>
              <Form.Control
                type="date"
                value={votingPeriod}
                onChange={(e) => setVotingPeriod(e.target.value)}
              />
            </Form.Group>
          </Col>
        </Row>

        <Form.Group controlId="categorySelect" className="mb-3">
          <Form.Label>Select Category:</Form.Label>
          <Form.Select
            value={category}
            onChange={(e) => setCategory(e.target.value)}
          >
            <option value="">Select Category</option>
            <option value="Education">Education</option>
            <option value="Entertainment">Entertainment</option>
            <option value="Politics">Politics</option>
            <option value="Sports">Sports</option>
            <option value="Research">Research</option>
          </Form.Select>
        </Form.Group>

        <Button variant="secondary" className="me-2">
          Cancel
        </Button>
        <Button variant="primary" onClick={handleSubmit}>
          Post
        </Button>
      </Form>
    </Card>
  );
}

export default AddPoll;

//-------------------------------------------------------------------

//Polllist component
import React, { useState, useEffect } from "react";
import CardComp from "./Common/Card";
import AddPoll from "./AddPoll";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap-icons/font/bootstrap-icons.css";

function Polllist() {
  const [polls, setPolls] = useState([]);

  // This function will be passed to AddPoll component to update the polls state
  const handlePollSubmit = (newPoll) => {
    setPolls((prevPolls) => [...prevPolls, newPoll]);
  };

  useEffect(() => {
    // Retrieve the poll data from sessionStorage on initial load
    const savedPoll = sessionStorage.getItem("pollData");
    if (savedPoll) {
      setPolls(JSON.parse(savedPoll));
    }
  }, []);

  useEffect(() => {
    // Save all polls to sessionStorage whenever they change
    sessionStorage.setItem("pollData", JSON.stringify(polls));
  }, [polls]);

  return (
    <>
      <AddPoll onPollSubmit={handlePollSubmit} />
      {polls.map((poll, index) => (
        <CardComp
          key={index}
          name="New Poll"
          createdon="Just now"
          title={poll.pollTitle}
          status="Open"
          question={poll.pollQuestion}
          options={poll.pollOptions}
          votingPeriod={poll.votingPeriod}
          category={poll.category}
        />
      ))}
    </>
  );
}

export default Polllist;

//card comp

import React from "react";
import { Card } from "react-bootstrap";

function CardComp({ name, createdon, title, question, options, votingPeriod, category, status }) {
  return (
    <Card style={{ marginBottom: "20px" }}>
      <Card.Body>
        <Card.Title>{title}</Card.Title>
        <Card.Subtitle className="mb-2 text-muted">{name} - {createdon}</Card.Subtitle>
        <Card.Text>
          <strong>Question:</strong> {question}
        </Card.Text>
        <Card.Text>
          <strong>Options:</strong>
          <ul>
            {options.map((option, index) => (
              <li key={index}>{option}</li>
            ))}
          </ul>
        </Card.Text>
        <Card.Text>
          <strong>Voting Period:</strong> {votingPeriod}
        </Card.Text>
        <Card.Text>
          <strong>Category:</strong> {category}
        </Card.Text>
        <Card.Text>
          <strong>Status:</strong> {status}
        </Card.Text>
      </Card.Body>
    </Card>
  );
}

export default CardComp;
